name: Pipeline git commands
on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/github-api.yaml

jobs:
  pipeline-git-commands:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"

      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"

      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Dump environment variables
        run: export

      - name: Run github script
        uses: actions/github-script@v3
        id: set-result
        with:
          script: |
            const { owner, repo } = context.repo;
            const { data: pullRequests } = await github.pulls.list({
              owner,
              repo,
              state: 'open',
            });
            //console.log(pullRequests);
            for (const pr of pullRequests) {
              //console.log('---------------- PR --------------');
              //console.log(pr);
              //console.log('------------------------------------');

              //const { data: pullRequest } = await github.pulls.get({
              //  owner,
              //  repo,
              //  pull_number: pr.number,
              //});
              
              //console.log('---------------- PR --------------');
              //console.log(pullRequest);
              //console.log('------------------------------------');
              console.log(`Merging master into PR #${pr.number}: ${pr.title}`);
              const res = await github.repos.merge({
                owner,
                repo,
                base: pr.head.ref,
                head: 'master',
              }).catch((err) => {
                console.log('ERROR: Cannot merge branch:', err.message);
                //console.log(err);
              });
              //console.log('---------------------- merge ----------------');
              //console.log(res);
              //console.log('==================================================');
            };
          result-encoding: string

      #- name: Get result
      #  run: echo "${{steps.set-result.outputs.result}}"

